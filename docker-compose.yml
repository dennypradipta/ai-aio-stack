services:
  # UNCOMMENT SERVICES THAT YOU WANT TO RUN

  # n8n:
  #   image: n8nio/n8n:latest
  #   hostname: n8n
  #   container_name: n8n
  #   restart: unless-stopped
  #   ports:
  #     - "5678:5678"
  #   environment:
  #     # Database configuration
  #     - DB_TYPE=postgresdb
  #     - DB_POSTGRESDB_HOST=postgres
  #     - DB_POSTGRESDB_USER=n8n
  #     - DB_POSTGRESDB_PASSWORD=change-me
  #     # n8n configuration
  #     - N8N_DIAGNOSTICS_ENABLED=false
  #     - N8N_PERSONALIZATION_ENABLED=false
  #     - N8N_ENCRYPTION_KEY=change-me
  #     - N8N_USER_MANAGEMENT_JWT_SECRET=change-me
  #     - WEBHOOK_URL=change-me
  #   volumes:
  #     - n8n_data:/home/node/.n8n
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - n8n-network

  # postgres:
  #   image: bitnami/postgresql:16
  #   hostname: postgres
  #   container_name: postgres
  #   restart: unless-stopped
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRESQL_DATABASE=n8n
  #     - POSTGRESQL_USERNAME=n8n
  #     - POSTGRESQL_PASSWORD=change-me
  #     - POSTGRESQL_POSTGRES_PASSWORD=change-me
  #   volumes:
  #     - postgres_data:/bitnami/postgresql
  #   networks:
  #     - n8n-network
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "PGPASSWORD=$$POSTGRESQL_PASSWORD pg_isready -h localhost -U n8n -d n8n",
  #       ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10

  # openwebui:
  #   image: ghcr.io/open-webui/open-webui:main
  #   hostname: openwebui
  #   container_name: openwebui
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - open-webui_data:/app/backend/data
  #   restart: unless-stopped
  #   networks:
  #     - n8n-network
  #   environment:
  #     - WEBUI_URL=change-me
  #     - WEBUI_PORT=8080

  # searxng:
  #   image: docker.io/searxng/searxng
  #   hostname: searxng
  #   container_name: searxng
  #   ports:
  #     - "9000:8080"
  #   volumes:
  #     - ./searxng:/etc/searxng
  #   restart: unless-stopped
  #   networks:
  #     - n8n-network

  # caddy:
  #   image: caddy:2
  #   container_name: caddy
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./Caddyfile:/etc/caddy/Caddyfile
  #     - ./statics/:/srv/statics/
  #     - caddy_data:/data
  #     - caddy_config:/config
  #   networks:
  #     - n8n-network

  # tika:
  #   image: apache/tika:latest-full
  #   hostname: tika
  #   container_name: tika
  #   ports:
  #     - "9998:9998"
  #   restart: unless-stopped
  #   networks:
  #     - n8n-network

networks:
  n8n-network:
    driver: bridge

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  open-webui_data:
    driver: local
